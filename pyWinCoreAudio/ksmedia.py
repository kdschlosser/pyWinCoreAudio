# -*- coding: utf-8 -*-
#
# This file is part of EventGhost.
# Copyright Â© 2005-2021 EventGhost Project <http://www.eventghost.net/>
#
# EventGhost is free software: you can redistribute it and/or modify it under
# the terms of the GNU General Public License as published by the Free
# Software Foundation, either version 2 of the License, or (at your option)
# any later version.
#
# EventGhost is distributed in the hope that it will be useful, but WITHOUT
# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
# FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for
# more details.
#
# You should have received a copy of the GNU General Public License along
# with EventGhost. If not, see <http://www.gnu.org/licenses/>.

from .data_types import *
from . import utils


class KSPROPERTY_AUDIO(ENUM):
    KSPROPERTY_AUDIO_LATENCY = 1
    KSPROPERTY_AUDIO_COPY_PROTECTION = 2
    KSPROPERTY_AUDIO_CHANNEL_CONFIG = 3
    KSPROPERTY_AUDIO_VOLUMELEVEL = 4
    KSPROPERTY_AUDIO_POSITION = 5
    KSPROPERTY_AUDIO_DYNAMIC_RANGE = 6
    KSPROPERTY_AUDIO_QUALITY = 7
    KSPROPERTY_AUDIO_SAMPLING_RATE = 8
    KSPROPERTY_AUDIO_DYNAMIC_SAMPLING_RATE = 9
    KSPROPERTY_AUDIO_MIX_LEVEL_TABLE = 10
    KSPROPERTY_AUDIO_MIX_LEVEL_CAPS = 11
    KSPROPERTY_AUDIO_MUX_SOURCE = 12
    KSPROPERTY_AUDIO_MUTE = 13
    KSPROPERTY_AUDIO_BASS = 14
    KSPROPERTY_AUDIO_MID = 15
    KSPROPERTY_AUDIO_TREBLE = 16
    KSPROPERTY_AUDIO_BASS_BOOST = 17
    KSPROPERTY_AUDIO_EQ_LEVEL = 18
    KSPROPERTY_AUDIO_NUM_EQ_BANDS = 19
    KSPROPERTY_AUDIO_EQ_BANDS = 20
    KSPROPERTY_AUDIO_AGC = 21
    KSPROPERTY_AUDIO_DELAY = 22
    KSPROPERTY_AUDIO_LOUDNESS = 23
    KSPROPERTY_AUDIO_WIDE_MODE = 24
    KSPROPERTY_AUDIO_WIDENESS = 25
    KSPROPERTY_AUDIO_REVERB_LEVEL = 26
    KSPROPERTY_AUDIO_CHORUS_LEVEL = 27
    KSPROPERTY_AUDIO_DEV_SPECIFIC = 28
    KSPROPERTY_AUDIO_DEMUX_DEST = 29
    KSPROPERTY_AUDIO_STEREO_ENHANCE = 30
    KSPROPERTY_AUDIO_MANUFACTURE_GUID = 31
    KSPROPERTY_AUDIO_PRODUCT_GUID = 32
    KSPROPERTY_AUDIO_CPU_RESOURCES = 33
    KSPROPERTY_AUDIO_STEREO_SPEAKER_GEOMETRY = 34
    KSPROPERTY_AUDIO_SURROUND_ENCODE = 35
    KSPROPERTY_AUDIO_3D_INTERFACE = 36
    KSPROPERTY_AUDIO_PEAKMETER = 37
    KSPROPERTY_AUDIO_ALGORITHM_INSTANCE = 38
    KSPROPERTY_AUDIO_FILTER_STATE = 39
    KSPROPERTY_AUDIO_PREFERRED_STATUS = 40
    KSPROPERTY_AUDIO_PEQ_MAX_BANDS = 41
    KSPROPERTY_AUDIO_PEQ_NUM_BANDS = 42
    KSPROPERTY_AUDIO_PEQ_BAND_CENTER_FREQ = 43
    KSPROPERTY_AUDIO_PEQ_BAND_Q_FACTOR = 44
    KSPROPERTY_AUDIO_PEQ_BAND_LEVEL = 45
    KSPROPERTY_AUDIO_CHORUS_MODULATION_RATE = 46
    KSPROPERTY_AUDIO_CHORUS_MODULATION_DEPTH = 47
    KSPROPERTY_AUDIO_REVERB_TIME = 48
    KSPROPERTY_AUDIO_REVERB_DELAY_FEEDBACK = 49
    KSPROPERTY_AUDIO_POSITIONEX = 50
    KSPROPERTY_AUDIO_MIC_ARRAY_GEOMETRY = 51
    KSPROPERTY_AUDIO_PRESENTATION_POSITION = 52
    KSPROPERTY_AUDIO_WAVERT_CURRENT_WRITE_POSITION = 53
    KSPROPERTY_AUDIO_LINEAR_BUFFER_POSITION = 54
    KSPROPERTY_AUDIO_PEAKMETER2 = 55
    KSPROPERTY_AUDIO_WAVERT_CURRENT_WRITE_LASTBUFFER_POSITION = 56
    KSPROPERTY_AUDIO_VOLUMELIMIT_ENGAGED = 57
    KSPROPERTY_AUDIO_MIC_SENSITIVITY = 58
    KSPROPERTY_AUDIO_MIC_SNR = 59
    KSPROPERTY_AUDIO_MIC_SENSITIVITY2 = 60


KSPROPERTY_AUDIO_LATENCY = KSPROPERTY_AUDIO.KSPROPERTY_AUDIO_LATENCY
KSPROPERTY_AUDIO_COPY_PROTECTION = KSPROPERTY_AUDIO.KSPROPERTY_AUDIO_COPY_PROTECTION
KSPROPERTY_AUDIO_CHANNEL_CONFIG = KSPROPERTY_AUDIO.KSPROPERTY_AUDIO_CHANNEL_CONFIG
KSPROPERTY_AUDIO_VOLUMELEVEL = KSPROPERTY_AUDIO.KSPROPERTY_AUDIO_VOLUMELEVEL
KSPROPERTY_AUDIO_POSITION = KSPROPERTY_AUDIO.KSPROPERTY_AUDIO_POSITION
KSPROPERTY_AUDIO_DYNAMIC_RANGE = KSPROPERTY_AUDIO.KSPROPERTY_AUDIO_DYNAMIC_RANGE
KSPROPERTY_AUDIO_QUALITY = KSPROPERTY_AUDIO.KSPROPERTY_AUDIO_QUALITY
KSPROPERTY_AUDIO_SAMPLING_RATE = KSPROPERTY_AUDIO.KSPROPERTY_AUDIO_SAMPLING_RATE
KSPROPERTY_AUDIO_DYNAMIC_SAMPLING_RATE = KSPROPERTY_AUDIO.KSPROPERTY_AUDIO_DYNAMIC_SAMPLING_RATE
KSPROPERTY_AUDIO_MIX_LEVEL_TABLE = KSPROPERTY_AUDIO.KSPROPERTY_AUDIO_MIX_LEVEL_TABLE
KSPROPERTY_AUDIO_MIX_LEVEL_CAPS = KSPROPERTY_AUDIO.KSPROPERTY_AUDIO_MIX_LEVEL_CAPS
KSPROPERTY_AUDIO_MUX_SOURCE = KSPROPERTY_AUDIO.KSPROPERTY_AUDIO_MUX_SOURCE
KSPROPERTY_AUDIO_MUTE = KSPROPERTY_AUDIO.KSPROPERTY_AUDIO_MUTE
KSPROPERTY_AUDIO_BASS = KSPROPERTY_AUDIO.KSPROPERTY_AUDIO_BASS
KSPROPERTY_AUDIO_MID = KSPROPERTY_AUDIO.KSPROPERTY_AUDIO_MID
KSPROPERTY_AUDIO_TREBLE = KSPROPERTY_AUDIO.KSPROPERTY_AUDIO_TREBLE
KSPROPERTY_AUDIO_BASS_BOOST = KSPROPERTY_AUDIO.KSPROPERTY_AUDIO_BASS_BOOST
KSPROPERTY_AUDIO_EQ_LEVEL = KSPROPERTY_AUDIO.KSPROPERTY_AUDIO_EQ_LEVEL
KSPROPERTY_AUDIO_NUM_EQ_BANDS = KSPROPERTY_AUDIO.KSPROPERTY_AUDIO_NUM_EQ_BANDS
KSPROPERTY_AUDIO_EQ_BANDS = KSPROPERTY_AUDIO.KSPROPERTY_AUDIO_EQ_BANDS
KSPROPERTY_AUDIO_AGC = KSPROPERTY_AUDIO.KSPROPERTY_AUDIO_AGC
KSPROPERTY_AUDIO_DELAY = KSPROPERTY_AUDIO.KSPROPERTY_AUDIO_DELAY
KSPROPERTY_AUDIO_LOUDNESS = KSPROPERTY_AUDIO.KSPROPERTY_AUDIO_LOUDNESS
KSPROPERTY_AUDIO_WIDE_MODE = KSPROPERTY_AUDIO.KSPROPERTY_AUDIO_WIDE_MODE
KSPROPERTY_AUDIO_WIDENESS = KSPROPERTY_AUDIO.KSPROPERTY_AUDIO_WIDENESS
KSPROPERTY_AUDIO_REVERB_LEVEL = KSPROPERTY_AUDIO.KSPROPERTY_AUDIO_REVERB_LEVEL
KSPROPERTY_AUDIO_CHORUS_LEVEL = KSPROPERTY_AUDIO.KSPROPERTY_AUDIO_CHORUS_LEVEL
KSPROPERTY_AUDIO_DEV_SPECIFIC = KSPROPERTY_AUDIO.KSPROPERTY_AUDIO_DEV_SPECIFIC
KSPROPERTY_AUDIO_DEMUX_DEST = KSPROPERTY_AUDIO.KSPROPERTY_AUDIO_DEMUX_DEST
KSPROPERTY_AUDIO_STEREO_ENHANCE = KSPROPERTY_AUDIO.KSPROPERTY_AUDIO_STEREO_ENHANCE
KSPROPERTY_AUDIO_MANUFACTURE_GUID = KSPROPERTY_AUDIO.KSPROPERTY_AUDIO_MANUFACTURE_GUID
KSPROPERTY_AUDIO_PRODUCT_GUID = KSPROPERTY_AUDIO.KSPROPERTY_AUDIO_PRODUCT_GUID
KSPROPERTY_AUDIO_CPU_RESOURCES = KSPROPERTY_AUDIO.KSPROPERTY_AUDIO_CPU_RESOURCES
KSPROPERTY_AUDIO_STEREO_SPEAKER_GEOMETRY = KSPROPERTY_AUDIO.KSPROPERTY_AUDIO_STEREO_SPEAKER_GEOMETRY
KSPROPERTY_AUDIO_SURROUND_ENCODE = KSPROPERTY_AUDIO.KSPROPERTY_AUDIO_SURROUND_ENCODE
KSPROPERTY_AUDIO_3D_INTERFACE = KSPROPERTY_AUDIO.KSPROPERTY_AUDIO_3D_INTERFACE
KSPROPERTY_AUDIO_PEAKMETER = KSPROPERTY_AUDIO.KSPROPERTY_AUDIO_PEAKMETER
KSPROPERTY_AUDIO_ALGORITHM_INSTANCE = KSPROPERTY_AUDIO.KSPROPERTY_AUDIO_ALGORITHM_INSTANCE
KSPROPERTY_AUDIO_FILTER_STATE = KSPROPERTY_AUDIO.KSPROPERTY_AUDIO_FILTER_STATE
KSPROPERTY_AUDIO_PREFERRED_STATUS = KSPROPERTY_AUDIO.KSPROPERTY_AUDIO_PREFERRED_STATUS
KSPROPERTY_AUDIO_PEQ_MAX_BANDS = KSPROPERTY_AUDIO.KSPROPERTY_AUDIO_PEQ_MAX_BANDS
KSPROPERTY_AUDIO_PEQ_NUM_BANDS = KSPROPERTY_AUDIO.KSPROPERTY_AUDIO_PEQ_NUM_BANDS
KSPROPERTY_AUDIO_PEQ_BAND_CENTER_FREQ = KSPROPERTY_AUDIO.KSPROPERTY_AUDIO_PEQ_BAND_CENTER_FREQ
KSPROPERTY_AUDIO_PEQ_BAND_Q_FACTOR = KSPROPERTY_AUDIO.KSPROPERTY_AUDIO_PEQ_BAND_Q_FACTOR
KSPROPERTY_AUDIO_PEQ_BAND_LEVEL = KSPROPERTY_AUDIO.KSPROPERTY_AUDIO_PEQ_BAND_LEVEL
KSPROPERTY_AUDIO_CHORUS_MODULATION_RATE = KSPROPERTY_AUDIO.KSPROPERTY_AUDIO_CHORUS_MODULATION_RATE
KSPROPERTY_AUDIO_CHORUS_MODULATION_DEPTH = KSPROPERTY_AUDIO.KSPROPERTY_AUDIO_CHORUS_MODULATION_DEPTH
KSPROPERTY_AUDIO_REVERB_TIME = KSPROPERTY_AUDIO.KSPROPERTY_AUDIO_REVERB_TIME
KSPROPERTY_AUDIO_REVERB_DELAY_FEEDBACK = KSPROPERTY_AUDIO.KSPROPERTY_AUDIO_REVERB_DELAY_FEEDBACK
KSPROPERTY_AUDIO_POSITIONEX = KSPROPERTY_AUDIO.KSPROPERTY_AUDIO_POSITIONEX
KSPROPERTY_AUDIO_MIC_ARRAY_GEOMETRY = KSPROPERTY_AUDIO.KSPROPERTY_AUDIO_MIC_ARRAY_GEOMETRY
KSPROPERTY_AUDIO_PRESENTATION_POSITION = KSPROPERTY_AUDIO.KSPROPERTY_AUDIO_PRESENTATION_POSITION
KSPROPERTY_AUDIO_WAVERT_CURRENT_WRITE_POSITION = KSPROPERTY_AUDIO.KSPROPERTY_AUDIO_WAVERT_CURRENT_WRITE_POSITION
KSPROPERTY_AUDIO_LINEAR_BUFFER_POSITION = KSPROPERTY_AUDIO.KSPROPERTY_AUDIO_LINEAR_BUFFER_POSITION
KSPROPERTY_AUDIO_PEAKMETER2 = KSPROPERTY_AUDIO.KSPROPERTY_AUDIO_PEAKMETER2
KSPROPERTY_AUDIO_WAVERT_CURRENT_WRITE_LASTBUFFER_POSITION = (
    KSPROPERTY_AUDIO.KSPROPERTY_AUDIO_WAVERT_CURRENT_WRITE_LASTBUFFER_POSITION
)
KSPROPERTY_AUDIO_VOLUMELIMIT_ENGAGED = KSPROPERTY_AUDIO.KSPROPERTY_AUDIO_VOLUMELIMIT_ENGAGED
KSPROPERTY_AUDIO_MIC_SENSITIVITY = KSPROPERTY_AUDIO.KSPROPERTY_AUDIO_MIC_SENSITIVITY
KSPROPERTY_AUDIO_MIC_SNR = KSPROPERTY_AUDIO.KSPROPERTY_AUDIO_MIC_SNR
KSPROPERTY_AUDIO_MIC_SENSITIVITY2 = KSPROPERTY_AUDIO.KSPROPERTY_AUDIO_MIC_SENSITIVITY2


def DEFINE_GUIDNAMED(*hex_guid):

    for key, value in globals().items():
        if not key.startswith('STATIC_KSNODETYPE_'):
            continue

        if hex_guid != value:
            continue

        name = key.replace('STATIC_KSNODETYPE_', '')
        name = name.replace('_', ' ').title()

        return NodeTypeGUID(name, *hex_guid)

    return GUID(*hex_guid)


STATIC_KSNODETYPE_SWSYNTH = (
    0x423274A0,
    0x8B81,
    0x11D1,
    0xA0,
    0x50,
    0x00,
    0x00,
    0xF8,
    0x00,
    0x47,
    0x88
)
KSNODETYPE_SWSYNTH = DEFINE_GUIDNAMED(
    *STATIC_KSNODETYPE_SWSYNTH
)
STATIC_KSNODETYPE_SWMIDI = (
    0xCB9BEFA0,
    0xA251,
    0x11D1,
    0xA0,
    0x50,
    0x00,
    0x00,
    0xF8,
    0x00,
    0x47,
    0x88
)
KSNODETYPE_SWMIDI = DEFINE_GUIDNAMED(
    *STATIC_KSNODETYPE_SWMIDI
)
STATIC_KSNODETYPE_DRM_DESCRAMBLE = (
    0xFFBB6E3F,
    0xCCFE,
    0x4D84,
    0x90,
    0xD9,
    0x42,
    0x14,
    0x18,
    0xB0,
    0x3A,
    0x8E
)
KSNODETYPE_DRM_DESCRAMBLE = DEFINE_GUIDNAMED(
    *STATIC_KSNODETYPE_DRM_DESCRAMBLE
)
STATIC_KSNODETYPE_TELEPHONY_BIDI = (
    0x686d7cc0,
    0xd903,
    0x4258,
    0xb4,
    0x43,
    0x3a,
    0x3d,
    0x35,
    0x80,
    0x74,
    0x1c
)
KSNODETYPE_TELEPHONY_BIDI = DEFINE_GUIDNAMED(
    *STATIC_KSNODETYPE_TELEPHONY_BIDI
)
STATIC_KSNODETYPE_FM_RX = (
    0x834a733c,
    0xf485,
    0x41c0,
    0xa6,
    0x2b,
    0x51,
    0x30,
    0x25,
    0x1,
    0x4e,
    0x40
)
KSNODETYPE_FM_RX = DEFINE_GUIDNAMED(
    *STATIC_KSNODETYPE_FM_RX
)
STATIC_KSNODETYPE_INPUT_UNDEFINED = DEFINE_USB_TERMINAL_GUID(0x0200)
KSNODETYPE_INPUT_UNDEFINED = DEFINE_GUIDNAMED(
    *STATIC_KSNODETYPE_INPUT_UNDEFINED
)
STATIC_KSNODETYPE_MICROPHONE = DEFINE_USB_TERMINAL_GUID(0x0201)
KSNODETYPE_MICROPHONE = DEFINE_GUIDNAMED(
    *STATIC_KSNODETYPE_MICROPHONE
)
STATIC_KSNODETYPE_DESKTOP_MICROPHONE = DEFINE_USB_TERMINAL_GUID(0x0202)
KSNODETYPE_DESKTOP_MICROPHONE = DEFINE_GUIDNAMED(
    *STATIC_KSNODETYPE_DESKTOP_MICROPHONE
)
STATIC_KSNODETYPE_PERSONAL_MICROPHONE = DEFINE_USB_TERMINAL_GUID(0x0203)
KSNODETYPE_PERSONAL_MICROPHONE = DEFINE_GUIDNAMED(
    *STATIC_KSNODETYPE_PERSONAL_MICROPHONE
)
STATIC_KSNODETYPE_OMNI_DIRECTIONAL_MICROPHONE = DEFINE_USB_TERMINAL_GUID(
    0x0204
)
KSNODETYPE_OMNI_DIRECTIONAL_MICROPHONE = DEFINE_GUIDNAMED(
    *STATIC_KSNODETYPE_OMNI_DIRECTIONAL_MICROPHONE
)
STATIC_KSNODETYPE_MICROPHONE_ARRAY = DEFINE_USB_TERMINAL_GUID(0x0205)
KSNODETYPE_MICROPHONE_ARRAY = DEFINE_GUIDNAMED(
    *STATIC_KSNODETYPE_MICROPHONE_ARRAY
)
STATIC_KSNODETYPE_PROCESSING_MICROPHONE_ARRAY = DEFINE_USB_TERMINAL_GUID(
    0x0206
)
KSNODETYPE_PROCESSING_MICROPHONE_ARRAY = DEFINE_GUIDNAMED(
    *STATIC_KSNODETYPE_PROCESSING_MICROPHONE_ARRAY
)
STATIC_KSNODETYPE_OUTPUT_UNDEFINED = DEFINE_USB_TERMINAL_GUID(0x0300)
KSNODETYPE_OUTPUT_UNDEFINED = DEFINE_GUIDNAMED(
    *STATIC_KSNODETYPE_OUTPUT_UNDEFINED
)
STATIC_KSNODETYPE_SPEAKER = DEFINE_USB_TERMINAL_GUID(0x0301)
KSNODETYPE_SPEAKER = DEFINE_GUIDNAMED(
    *STATIC_KSNODETYPE_SPEAKER
)

STATIC_KSNODETYPE_HEADPHONES = DEFINE_USB_TERMINAL_GUID(0x0302)
KSNODETYPE_HEADPHONES = DEFINE_GUIDNAMED(
    *STATIC_KSNODETYPE_HEADPHONES
)
STATIC_KSNODETYPE_HEAD_MOUNTED_DISPLAY_AUDIO = DEFINE_USB_TERMINAL_GUID(0x0303)
KSNODETYPE_HEAD_MOUNTED_DISPLAY_AUDIO = DEFINE_GUIDNAMED(
    *STATIC_KSNODETYPE_HEAD_MOUNTED_DISPLAY_AUDIO
)
STATIC_KSNODETYPE_DESKTOP_SPEAKER = DEFINE_USB_TERMINAL_GUID(0x0304)
KSNODETYPE_DESKTOP_SPEAKER = DEFINE_GUIDNAMED(
    *STATIC_KSNODETYPE_DESKTOP_SPEAKER
)
STATIC_KSNODETYPE_ROOM_SPEAKER = DEFINE_USB_TERMINAL_GUID(0x0305)
KSNODETYPE_ROOM_SPEAKER = DEFINE_GUIDNAMED(
    *STATIC_KSNODETYPE_ROOM_SPEAKER
)
STATIC_KSNODETYPE_COMMUNICATION_SPEAKER = DEFINE_USB_TERMINAL_GUID(0x0306)
KSNODETYPE_COMMUNICATION_SPEAKER = DEFINE_GUIDNAMED(
    *STATIC_KSNODETYPE_COMMUNICATION_SPEAKER
)
STATIC_KSNODETYPE_LOW_FREQUENCY_EFFECTS_SPEAKER = DEFINE_USB_TERMINAL_GUID(
    0x0307
)
KSNODETYPE_LOW_FREQUENCY_EFFECTS_SPEAKER = DEFINE_GUIDNAMED(
    *STATIC_KSNODETYPE_LOW_FREQUENCY_EFFECTS_SPEAKER
)
STATIC_KSNODETYPE_BIDIRECTIONAL_UNDEFINED = DEFINE_USB_TERMINAL_GUID(0x0400)
KSNODETYPE_BIDIRECTIONAL_UNDEFINED = DEFINE_GUIDNAMED(
    *STATIC_KSNODETYPE_BIDIRECTIONAL_UNDEFINED
)
STATIC_KSNODETYPE_HANDSET = DEFINE_USB_TERMINAL_GUID(0x0401)
KSNODETYPE_HANDSET = DEFINE_GUIDNAMED(
    *STATIC_KSNODETYPE_HANDSET
)
KSNODETYPE_HEADSET_MICROPHONE = KSNODETYPE_PERSONAL_MICROPHONE

# define = KSNODETYPE_HEADSET_SPEAKERS KSNODETYPE_COMMUNICATION_SPEAKER

STATIC_KSNODETYPE_HEADSET = DEFINE_USB_TERMINAL_GUID(0x0402)
KSNODETYPE_HEADSET = DEFINE_GUIDNAMED(
    *STATIC_KSNODETYPE_HEADSET
)
STATIC_KSNODETYPE_SPEAKERPHONE_NO_ECHO_REDUCTION = DEFINE_USB_TERMINAL_GUID(
    0x0403
)
KSNODETYPE_SPEAKERPHONE_NO_ECHO_REDUCTION = DEFINE_GUIDNAMED(
    *STATIC_KSNODETYPE_SPEAKERPHONE_NO_ECHO_REDUCTION
)
STATIC_KSNODETYPE_ECHO_SUPPRESSING_SPEAKERPHONE = DEFINE_USB_TERMINAL_GUID(
    0x0404
)
KSNODETYPE_ECHO_SUPPRESSING_SPEAKERPHONE = DEFINE_GUIDNAMED(
    *STATIC_KSNODETYPE_ECHO_SUPPRESSING_SPEAKERPHONE
)
STATIC_KSNODETYPE_ECHO_CANCELING_SPEAKERPHONE = DEFINE_USB_TERMINAL_GUID(
    0x0405
)
KSNODETYPE_ECHO_CANCELING_SPEAKERPHONE = DEFINE_GUIDNAMED(
    *STATIC_KSNODETYPE_ECHO_CANCELING_SPEAKERPHONE
)
STATIC_KSNODETYPE_TELEPHONY_UNDEFINED = DEFINE_USB_TERMINAL_GUID(0x0500)
KSNODETYPE_TELEPHONY_UNDEFINED = DEFINE_GUIDNAMED(
    *STATIC_KSNODETYPE_TELEPHONY_UNDEFINED
)
STATIC_KSNODETYPE_PHONE_LINE = DEFINE_USB_TERMINAL_GUID(0x0501)
KSNODETYPE_PHONE_LINE = DEFINE_GUIDNAMED(
    *STATIC_KSNODETYPE_PHONE_LINE
)
STATIC_KSNODETYPE_TELEPHONE = DEFINE_USB_TERMINAL_GUID(0x0502)
KSNODETYPE_TELEPHONE = DEFINE_GUIDNAMED(
    *STATIC_KSNODETYPE_TELEPHONE
)
STATIC_KSNODETYPE_DOWN_LINE_PHONE = DEFINE_USB_TERMINAL_GUID(0x0503)
KSNODETYPE_DOWN_LINE_PHONE = DEFINE_GUIDNAMED(
    *STATIC_KSNODETYPE_DOWN_LINE_PHONE
)
STATIC_KSNODETYPE_EXTERNAL_UNDEFINED = DEFINE_USB_TERMINAL_GUID(0x0600)
KSNODETYPE_EXTERNAL_UNDEFINED = DEFINE_GUIDNAMED(
    *STATIC_KSNODETYPE_EXTERNAL_UNDEFINED
)
STATIC_KSNODETYPE_ANALOG_CONNECTOR = DEFINE_USB_TERMINAL_GUID(0x601)
KSNODETYPE_ANALOG_CONNECTOR = DEFINE_GUIDNAMED(
    *STATIC_KSNODETYPE_ANALOG_CONNECTOR
)
STATIC_KSNODETYPE_DIGITAL_AUDIO_INTERFACE = DEFINE_USB_TERMINAL_GUID(0x0602)
KSNODETYPE_DIGITAL_AUDIO_INTERFACE = DEFINE_GUIDNAMED(
    *STATIC_KSNODETYPE_DIGITAL_AUDIO_INTERFACE
)
STATIC_KSNODETYPE_LINE_CONNECTOR = DEFINE_USB_TERMINAL_GUID(0x0603)
KSNODETYPE_LINE_CONNECTOR = DEFINE_GUIDNAMED(
    *STATIC_KSNODETYPE_LINE_CONNECTOR
)
STATIC_KSNODETYPE_LEGACY_AUDIO_CONNECTOR = DEFINE_USB_TERMINAL_GUID(0x0604)
KSNODETYPE_LEGACY_AUDIO_CONNECTOR = DEFINE_GUIDNAMED(
    *STATIC_KSNODETYPE_LEGACY_AUDIO_CONNECTOR
)
STATIC_KSNODETYPE_SPDIF_INTERFACE = DEFINE_USB_TERMINAL_GUID(0x0605)
KSNODETYPE_SPDIF_INTERFACE = DEFINE_GUIDNAMED(
    *STATIC_KSNODETYPE_SPDIF_INTERFACE
)
STATIC_KSNODETYPE_1394_DA_STREAM = DEFINE_USB_TERMINAL_GUID(0x0606)
KSNODETYPE_1394_DA_STREAM = DEFINE_GUIDNAMED(
    *STATIC_KSNODETYPE_1394_DA_STREAM
)
STATIC_KSNODETYPE_1394_DV_STREAM_SOUNDTRACK = DEFINE_USB_TERMINAL_GUID(0x0607)
KSNODETYPE_1394_DV_STREAM_SOUNDTRACK = DEFINE_GUIDNAMED(
    *STATIC_KSNODETYPE_1394_DV_STREAM_SOUNDTRACK
)
STATIC_KSNODETYPE_EMBEDDED_UNDEFINED = DEFINE_USB_TERMINAL_GUID(0x0700)
KSNODETYPE_EMBEDDED_UNDEFINED = DEFINE_GUIDNAMED(
    *STATIC_KSNODETYPE_EMBEDDED_UNDEFINED
)
STATIC_KSNODETYPE_LEVEL_CALIBRATION_NOISE_SOURCE = DEFINE_USB_TERMINAL_GUID(
    0x0701
)
KSNODETYPE_LEVEL_CALIBRATION_NOISE_SOURCE = DEFINE_GUIDNAMED(
    *STATIC_KSNODETYPE_LEVEL_CALIBRATION_NOISE_SOURCE
)
STATIC_KSNODETYPE_EQUALIZATION_NOISE = DEFINE_USB_TERMINAL_GUID(0x0702)
KSNODETYPE_EQUALIZATION_NOISE = DEFINE_GUIDNAMED(
    *STATIC_KSNODETYPE_EQUALIZATION_NOISE
)
STATIC_KSNODETYPE_CD_PLAYER = DEFINE_USB_TERMINAL_GUID(0x0703)
KSNODETYPE_CD_PLAYER = DEFINE_GUIDNAMED(
    *STATIC_KSNODETYPE_CD_PLAYER
)
STATIC_KSNODETYPE_DAT_IO_DIGITAL_AUDIO_TAPE = DEFINE_USB_TERMINAL_GUID(0x0704)
KSNODETYPE_DAT_IO_DIGITAL_AUDIO_TAPE = DEFINE_GUIDNAMED(
    *STATIC_KSNODETYPE_DAT_IO_DIGITAL_AUDIO_TAPE
)
STATIC_KSNODETYPE_DCC_IO_DIGITAL_COMPACT_CASSETTE = DEFINE_USB_TERMINAL_GUID(
    0x0705
)
KSNODETYPE_DCC_IO_DIGITAL_COMPACT_CASSETTE = DEFINE_GUIDNAMED(
    *STATIC_KSNODETYPE_DCC_IO_DIGITAL_COMPACT_CASSETTE
)
STATIC_KSNODETYPE_MINIDISK = DEFINE_USB_TERMINAL_GUID(0x0706)
KSNODETYPE_MINIDISK = DEFINE_GUIDNAMED(
    *STATIC_KSNODETYPE_MINIDISK
)
STATIC_KSNODETYPE_ANALOG_TAPE = DEFINE_USB_TERMINAL_GUID(0x0707)
KSNODETYPE_ANALOG_TAPE = DEFINE_GUIDNAMED(
    *STATIC_KSNODETYPE_ANALOG_TAPE
)
STATIC_KSNODETYPE_PHONOGRAPH = DEFINE_USB_TERMINAL_GUID(0x0708)
KSNODETYPE_PHONOGRAPH = DEFINE_GUIDNAMED(
    *STATIC_KSNODETYPE_PHONOGRAPH
)
STATIC_KSNODETYPE_VCR_AUDIO = DEFINE_USB_TERMINAL_GUID(0x0708)
KSNODETYPE_VCR_AUDIO = DEFINE_GUIDNAMED(
    *STATIC_KSNODETYPE_VCR_AUDIO
)
STATIC_KSNODETYPE_VIDEO_DISC_AUDIO = DEFINE_USB_TERMINAL_GUID(0x070A)
KSNODETYPE_VIDEO_DISC_AUDIO = DEFINE_GUIDNAMED(
    *STATIC_KSNODETYPE_VIDEO_DISC_AUDIO
)
STATIC_KSNODETYPE_DVD_AUDIO = DEFINE_USB_TERMINAL_GUID(0x070B)
KSNODETYPE_DVD_AUDIO = DEFINE_GUIDNAMED(
    *STATIC_KSNODETYPE_DVD_AUDIO
)
STATIC_KSNODETYPE_TV_TUNER_AUDIO = DEFINE_USB_TERMINAL_GUID(0x070C)
KSNODETYPE_TV_TUNER_AUDIO = DEFINE_GUIDNAMED(
    *STATIC_KSNODETYPE_TV_TUNER_AUDIO
)
STATIC_KSNODETYPE_SATELLITE_RECEIVER_AUDIO = DEFINE_USB_TERMINAL_GUID(0x070D)
KSNODETYPE_SATELLITE_RECEIVER_AUDIO = DEFINE_GUIDNAMED(
    *STATIC_KSNODETYPE_SATELLITE_RECEIVER_AUDIO
)
STATIC_KSNODETYPE_CABLE_TUNER_AUDIO = DEFINE_USB_TERMINAL_GUID(0x070E)
KSNODETYPE_CABLE_TUNER_AUDIO = DEFINE_GUIDNAMED(
    *STATIC_KSNODETYPE_CABLE_TUNER_AUDIO
)
STATIC_KSNODETYPE_DSS_AUDIO = DEFINE_USB_TERMINAL_GUID(0x070F)
KSNODETYPE_DSS_AUDIO = DEFINE_GUIDNAMED(
    *STATIC_KSNODETYPE_DSS_AUDIO
)
STATIC_KSNODETYPE_RADIO_RECEIVER = DEFINE_USB_TERMINAL_GUID(0x0710)
KSNODETYPE_RADIO_RECEIVER = DEFINE_GUIDNAMED(
    *STATIC_KSNODETYPE_RADIO_RECEIVER
)
STATIC_KSNODETYPE_RADIO_TRANSMITTER = DEFINE_USB_TERMINAL_GUID(0x0711)
KSNODETYPE_RADIO_TRANSMITTER = DEFINE_GUIDNAMED(
    *STATIC_KSNODETYPE_RADIO_TRANSMITTER
)
STATIC_KSNODETYPE_MULTITRACK_RECORDER = DEFINE_USB_TERMINAL_GUID(0x0712)
KSNODETYPE_MULTITRACK_RECORDER = DEFINE_GUIDNAMED(
    *STATIC_KSNODETYPE_MULTITRACK_RECORDER
)
STATIC_KSNODETYPE_SYNTHESIZER = DEFINE_USB_TERMINAL_GUID(0x0713)
KSNODETYPE_SYNTHESIZER = DEFINE_GUIDNAMED(
    *STATIC_KSNODETYPE_SYNTHESIZER
)
STATIC_KSNODETYPE_HDMI_INTERFACE = (
    0xd1b9cc2a,
    0xf519,
    0x417f,
    0x91,
    0xc9,
    0x55,
    0xfa,
    0x65,
    0x48,
    0x10,
    0x01
)
KSNODETYPE_HDMI_INTERFACE = DEFINE_GUIDNAMED(
    *STATIC_KSNODETYPE_HDMI_INTERFACE
)
STATIC_KSNODETYPE_DISPLAYPORT_INTERFACE = (
    0xe47e4031,
    0x3ea6,
    0x418d,
    0x8f,
    0x9b,
    0xb7,
    0x38,
    0x43,
    0xcc,
    0xba,
    0x97
)
KSNODETYPE_DISPLAYPORT_INTERFACE = DEFINE_GUIDNAMED(
    *STATIC_KSNODETYPE_DISPLAYPORT_INTERFACE
)
STATIC_KSNODETYPE_AUDIO_LOOPBACK = (
    0x8f42c0b2,
    0x91ce,
    0x4bcf,
    0x9c,
    0xcd,
    0xe,
    0x59,
    0x90,
    0x37,
    0xab,
    0x35
)
KSNODETYPE_AUDIO_LOOPBACK = DEFINE_GUIDNAMED(
    *STATIC_KSNODETYPE_AUDIO_LOOPBACK
)
STATIC_KSNODETYPE_AUDIO_KEYWORDDETECTOR = (
    0x3817e0b8,
    0xdf58,
    0x4375,
    0xb6,
    0x69,
    0xc4,
    0x96,
    0x34,
    0x33,
    0x1f,
    0x9d
)
KSNODETYPE_AUDIO_KEYWORDDETECTOR = DEFINE_GUIDNAMED(
    *STATIC_KSNODETYPE_AUDIO_KEYWORDDETECTOR
)
STATIC_KSNODETYPE_MIDI_JACK = (
    0x265e0c3f,
    0xfa39,
    0x4df3,
    0xab,
    0x04,
    0xbe,
    0x01,
    0xb9,
    0x1e,
    0x29,
    0x9a
)
KSNODETYPE_MIDI_JACK = DEFINE_GUIDNAMED(
    *STATIC_KSNODETYPE_MIDI_JACK
)
STATIC_KSNODETYPE_MIDI_ELEMENT = (
    0x01c6fe66,
    0x6e48,
    0x4c65,
    0xac,
    0x9b,
    0x52,
    0xdb,
    0x5d,
    0x65,
    0x6c,
    0x7e
)
KSNODETYPE_MIDI_ELEMENT = DEFINE_GUIDNAMED(
    *STATIC_KSNODETYPE_MIDI_ELEMENT
)
STATIC_KSNODETYPE_AUDIO_ENGINE = (
    0x35caf6e4,
    0xf3b3,
    0x4168,
    0xbb,
    0x4b,
    0x55,
    0xe7,
    0x7a,
    0x46,
    0x1c,
    0x7e
)
KSNODETYPE_AUDIO_ENGINE = DEFINE_GUIDNAMED(
    *STATIC_KSNODETYPE_AUDIO_ENGINE
)
STATIC_KSNODETYPE_SPEAKERS_STATIC_JACK = (
    0x28e04f87,
    0x4dbe,
    0x4f8d,
    0x85,
    0x89,
    0x2,
    0x5d,
    0x20,
    0x9d,
    0xfb,
    0x4a
)
KSNODETYPE_SPEAKERS_STATIC_JACK = DEFINE_GUIDNAMED(
    *STATIC_KSNODETYPE_SPEAKERS_STATIC_JACK
)
STATIC_KSNODETYPE_DAC = (
    0x507AE360,
    0xC554,
    0x11D0,
    0x8A,
    0x2B,
    0x00,
    0xA0,
    0xC9,
    0x25,
    0x5A,
    0xC1
)
KSNODETYPE_DAC = DEFINE_GUIDNAMED(
    *STATIC_KSNODETYPE_DAC
)
STATIC_KSNODETYPE_ADC = (
    0x4D837FE0,
    0xC555,
    0x11D0,
    0x8A,
    0x2B,
    0x00,
    0xA0,
    0xC9,
    0x25,
    0x5A,
    0xC1
)
KSNODETYPE_ADC = DEFINE_GUIDNAMED(
    *STATIC_KSNODETYPE_ADC
)
STATIC_KSNODETYPE_SRC = (
    0x9DB7B9E0,
    0xC555,
    0x11D0,
    0x8A,
    0x2B,
    0x00,
    0xA0,
    0xC9,
    0x25,
    0x5A,
    0xC1
)
KSNODETYPE_SRC = DEFINE_GUIDNAMED(
    *STATIC_KSNODETYPE_SRC
)
STATIC_KSNODETYPE_SUPERMIX = (
    0xE573ADC0,
    0xC555,
    0x11D0,
    0x8A,
    0x2B,
    0x00,
    0xA0,
    0xC9,
    0x25,
    0x5A,
    0xC1
)
KSNODETYPE_SUPERMIX = DEFINE_GUIDNAMED(
    *STATIC_KSNODETYPE_SUPERMIX
)
STATIC_KSNODETYPE_MUX = (
    0x2CEAF780,
    0xC556,
    0x11D0,
    0x8A,
    0x2B,
    0x00,
    0xA0,
    0xC9,
    0x25,
    0x5A,
    0xC1
)
KSNODETYPE_MUX = DEFINE_GUIDNAMED(
    *STATIC_KSNODETYPE_MUX
)
STATIC_KSNODETYPE_DEMUX = (
    0xC0EB67D4,
    0xE807,
    0x11D0,
    0x95,
    0x8A,
    0x00,
    0xC0,
    0x4F,
    0xB9,
    0x25,
    0xD3
)
KSNODETYPE_DEMUX = DEFINE_GUIDNAMED(
    *STATIC_KSNODETYPE_DEMUX
)
STATIC_KSNODETYPE_SUM = (
    0xDA441A60,
    0xC556,
    0x11D0,
    0x8A,
    0x2B,
    0x00,
    0xA0,
    0xC9,
    0x25,
    0x5A,
    0xC1
)
KSNODETYPE_SUM = DEFINE_GUIDNAMED(
    *STATIC_KSNODETYPE_SUM
)
STATIC_KSNODETYPE_MUTE = (
    0x02B223C0,
    0xC557,
    0x11D0,
    0x8A,
    0x2B,
    0x00,
    0xA0,
    0xC9,
    0x25,
    0x5A,
    0xC1
)
KSNODETYPE_MUTE = DEFINE_GUIDNAMED(
    *STATIC_KSNODETYPE_MUTE
)
STATIC_KSNODETYPE_VOLUME = (
    0x3A5ACC00,
    0xC557,
    0x11D0,
    0x8A,
    0x2B,
    0x00,
    0xA0,
    0xC9,
    0x25,
    0x5A,
    0xC1
)
KSNODETYPE_VOLUME = DEFINE_GUIDNAMED(
    *STATIC_KSNODETYPE_VOLUME
)
STATIC_KSNODETYPE_TONE = (
    0x7607E580,
    0xC557,
    0x11D0,
    0x8A,
    0x2B,
    0x00,
    0xA0,
    0xC9,
    0x25,
    0x5A,
    0xC1
)
KSNODETYPE_TONE = DEFINE_GUIDNAMED(
    *STATIC_KSNODETYPE_TONE
)
STATIC_KSNODETYPE_EQUALIZER = (
    0x9D41B4A0,
    0xC557,
    0x11D0,
    0x8A,
    0x2B,
    0x00,
    0xA0,
    0xC9,
    0x25,
    0x5A,
    0xC1
)
KSNODETYPE_EQUALIZER = DEFINE_GUIDNAMED(
    *STATIC_KSNODETYPE_EQUALIZER
)
STATIC_KSNODETYPE_AGC = (
    0xE88C9BA0,
    0xC557,
    0x11D0,
    0x8A,
    0x2B,
    0x00,
    0xA0,
    0xC9,
    0x25,
    0x5A,
    0xC1
)
KSNODETYPE_AGC = DEFINE_GUIDNAMED(
    *STATIC_KSNODETYPE_AGC
)
STATIC_KSNODETYPE_NOISE_SUPPRESS = (
    0xe07f903f,
    0x62fd,
    0x4e60,
    0x8c,
    0xdd,
    0xde,
    0xa7,
    0x23,
    0x66,
    0x65,
    0xb5
)
KSNODETYPE_NOISE_SUPPRESS = DEFINE_GUIDNAMED(
    *STATIC_KSNODETYPE_NOISE_SUPPRESS
)
STATIC_KSNODETYPE_DELAY = (
    0x144981E0,
    0xC558,
    0x11D0,
    0x8A,
    0x2B,
    0x00,
    0xA0,
    0xC9,
    0x25,
    0x5A,
    0xC1
)
KSNODETYPE_DELAY = DEFINE_GUIDNAMED(
    *STATIC_KSNODETYPE_DELAY
)
STATIC_KSNODETYPE_LOUDNESS = (
    0x41887440,
    0xC558,
    0x11D0,
    0x8A,
    0x2B,
    0x00,
    0xA0,
    0xC9,
    0x25,
    0x5A,
    0xC1
)
KSNODETYPE_LOUDNESS = DEFINE_GUIDNAMED(
    *STATIC_KSNODETYPE_LOUDNESS
)
STATIC_KSNODETYPE_PROLOGIC_DECODER = (
    0x831C2C80,
    0xC558,
    0x11D0,
    0x8A,
    0x2B,
    0x00,
    0xA0,
    0xC9,
    0x25,
    0x5A,
    0xC1
)
KSNODETYPE_PROLOGIC_DECODER = DEFINE_GUIDNAMED(
    *STATIC_KSNODETYPE_PROLOGIC_DECODER
)
STATIC_KSNODETYPE_STEREO_WIDE = (
    0xA9E69800,
    0xC558,
    0x11D0,
    0x8A,
    0x2B,
    0x00,
    0xA0,
    0xC9,
    0x25,
    0x5A,
    0xC1
)
KSNODETYPE_STEREO_WIDE = DEFINE_GUIDNAMED(
    *STATIC_KSNODETYPE_STEREO_WIDE
)
STATIC_KSNODETYPE_REVERB = (
    0xEF0328E0,
    0xC558,
    0x11D0,
    0x8A,
    0x2B,
    0x00,
    0xA0,
    0xC9,
    0x25,
    0x5A,
    0xC1
)
KSNODETYPE_REVERB = DEFINE_GUIDNAMED(
    *STATIC_KSNODETYPE_REVERB
)
STATIC_KSNODETYPE_CHORUS = (
    0x20173F20,
    0xC559,
    0x11D0,
    0x8A,
    0x2B,
    0x00,
    0xA0,
    0xC9,
    0x25,
    0x5A,
    0xC1
)
KSNODETYPE_CHORUS = DEFINE_GUIDNAMED(
    *STATIC_KSNODETYPE_CHORUS
)
STATIC_KSNODETYPE_3D_EFFECTS = (
    0x55515860,
    0xC559,
    0x11D0,
    0x8A,
    0x2B,
    0x00,
    0xA0,
    0xC9,
    0x25,
    0x5A,
    0xC1
)
KSNODETYPE_3D_EFFECTS = DEFINE_GUIDNAMED(
    *STATIC_KSNODETYPE_3D_EFFECTS
)
STATIC_KSNODETYPE_PARAMETRIC_EQUALIZER = (
    0x19bb3a6a,
    0xce2b,
    0x4442,
    0x87,
    0xec,
    0x67,
    0x27,
    0xc3,
    0xca,
    0xb4,
    0x77
)
KSNODETYPE_PARAMETRIC_EQUALIZER = DEFINE_GUIDNAMED(
    *STATIC_KSNODETYPE_PARAMETRIC_EQUALIZER
)
STATIC_KSNODETYPE_UPDOWN_MIX = (
    0xb7edc5cf,
    0x7b63,
    0x4ee2,
    0xa1,
    0x0,
    0x29,
    0xee,
    0x2c,
    0xb6,
    0xb2,
    0xde
)
KSNODETYPE_UPDOWN_MIX = DEFINE_GUIDNAMED(
    *STATIC_KSNODETYPE_UPDOWN_MIX
)
STATIC_KSNODETYPE_DYN_RANGE_COMPRESSOR = (
    0x8c8a6a8,
    0x601f,
    0x4af8,
    0x87,
    0x93,
    0xd9,
    0x5,
    0xff,
    0x4c,
    0xa9,
    0x7d
)
KSNODETYPE_DYN_RANGE_COMPRESSOR = DEFINE_GUIDNAMED(
    *STATIC_KSNODETYPE_DYN_RANGE_COMPRESSOR
)

STATIC_KSCATEGORY_MICROPHONE_ARRAY_PROCESSOR = (
    0x830a44f2,
    0xa32d,
    0x476b,
    0xbe,
    0x97,
    0x42,
    0x84,
    0x56,
    0x73,
    0xb3,
    0x5a
)
KSCATEGORY_MICROPHONE_ARRAY_PROCESSOR = DEFINE_GUIDNAMED(
    *STATIC_KSCATEGORY_MICROPHONE_ARRAY_PROCESSOR
)

STATIC_KSNODETYPE_MICROPHONE_ARRAY_PROCESSOR = (
    STATIC_KSCATEGORY_MICROPHONE_ARRAY_PROCESSOR
)
KSNODETYPE_MICROPHONE_ARRAY_PROCESSOR = (
    KSCATEGORY_MICROPHONE_ARRAY_PROCESSOR
)

STATIC_KSNODETYPE_DEV_SPECIFIC = (
    0x941C7AC0,
    0xC559,
    0x11D0,
    0x8A,
    0x2B,
    0x00,
    0xA0,
    0xC9,
    0x25,
    0x5A,
    0xC1
)
KSNODETYPE_DEV_SPECIFIC = DEFINE_GUIDNAMED(
    *STATIC_KSNODETYPE_DEV_SPECIFIC
)
STATIC_KSNODETYPE_PROLOGIC_ENCODER = (
    0x8074C5B2,
    0x3C66,
    0x11D2,
    0xB4,
    0x5A,
    0x30,
    0x78,
    0x30,
    0x2C,
    0x20,
    0x30
)
KSNODETYPE_PROLOGIC_ENCODER = DEFINE_GUIDNAMED(
    *STATIC_KSNODETYPE_PROLOGIC_ENCODER
)

STATIC_KSNODETYPE_PEAKMETER = (
    0xa085651e,
    0x5f0d,
    0x4b36,
    0xa8,
    0x69,
    0xd1,
    0x95,
    0xd6,
    0xab,
    0x4b,
    0x9e
)
KSNODETYPE_PEAKMETER = DEFINE_GUIDNAMED(
    *STATIC_KSNODETYPE_PEAKMETER
)


KSNODETYPE = {
    KSNODETYPE_SWSYNTH: 'Software Synth',
    KSNODETYPE_SWMIDI: 'Software MIDI',
    KSNODETYPE_DRM_DESCRAMBLE: 'DRM Descramble',
    KSNODETYPE_TELEPHONY_BIDI: 'Telephony Bidi',
    KSNODETYPE_FM_RX: 'FM RX',
    KSNODETYPE_INPUT_UNDEFINED: 'Input Undefined',
    KSNODETYPE_MICROPHONE: 'Microphone',
    KSNODETYPE_DESKTOP_MICROPHONE: 'Desktop Microphone',
    KSNODETYPE_PERSONAL_MICROPHONE: 'Personal Microphone',
    KSNODETYPE_OMNI_DIRECTIONAL_MICROPHONE: 'Omni Directional Microphone',
    KSNODETYPE_MICROPHONE_ARRAY: 'Microphone Array',
    KSNODETYPE_PROCESSING_MICROPHONE_ARRAY: 'Processing Microphone Array',
    KSNODETYPE_OUTPUT_UNDEFINED: 'Output Undefined',
    KSNODETYPE_SPEAKER: 'Speaker',
    KSNODETYPE_HEADPHONES: 'Headphones',
    KSNODETYPE_HEAD_MOUNTED_DISPLAY_AUDIO: 'Head Mounted Display Audio',
    KSNODETYPE_DESKTOP_SPEAKER: 'Desktop Speaker',
    KSNODETYPE_ROOM_SPEAKER: 'Room Speaker',
    KSNODETYPE_COMMUNICATION_SPEAKER: 'Communication Speaker',
    KSNODETYPE_LOW_FREQUENCY_EFFECTS_SPEAKER: 'Low Frequency Effects Speaker',
    KSNODETYPE_BIDIRECTIONAL_UNDEFINED: 'Bidirectional Undefined',
    KSNODETYPE_HANDSET: 'Handset',
    KSNODETYPE_HEADSET: 'Headset',
    KSNODETYPE_SPEAKERPHONE_NO_ECHO_REDUCTION: 'Speakerphone No Echo Reduction',
    KSNODETYPE_ECHO_SUPPRESSING_SPEAKERPHONE: 'Echo Suppressing Speakerphone',
    KSNODETYPE_ECHO_CANCELING_SPEAKERPHONE: 'Echo Canceling Speakerphone',
    KSNODETYPE_TELEPHONY_UNDEFINED: 'Telephony Undefined',
    KSNODETYPE_PHONE_LINE: 'Phone Line',
    KSNODETYPE_TELEPHONE: 'Telephone',
    KSNODETYPE_DOWN_LINE_PHONE: 'Down Line Phone',
    KSNODETYPE_EXTERNAL_UNDEFINED: 'External Undefined',
    KSNODETYPE_ANALOG_CONNECTOR: 'Analog Connector',
    KSNODETYPE_DIGITAL_AUDIO_INTERFACE: 'Digital Audio Interface',
    KSNODETYPE_LINE_CONNECTOR: 'Line Connector',
    KSNODETYPE_LEGACY_AUDIO_CONNECTOR: 'Legacy Audio Connector',
    KSNODETYPE_SPDIF_INTERFACE: 'SPDIF Interface',
    KSNODETYPE_1394_DA_STREAM: '1394 Digital Audio Stream',
    KSNODETYPE_1394_DV_STREAM_SOUNDTRACK: '1394 Digital Video Stream Soundtrack',
    KSNODETYPE_EMBEDDED_UNDEFINED: 'Embedded Undefined',
    KSNODETYPE_LEVEL_CALIBRATION_NOISE_SOURCE: 'Level Calibration Noise Source',
    KSNODETYPE_EQUALIZATION_NOISE: 'Equalization Noise',
    KSNODETYPE_CD_PLAYER: 'CD Player',
    KSNODETYPE_DAT_IO_DIGITAL_AUDIO_TAPE: 'Digital Audio Tape',
    KSNODETYPE_DCC_IO_DIGITAL_COMPACT_CASSETTE: 'Digital Compact Cassette',
    KSNODETYPE_MINIDISK: 'Minidisk',
    KSNODETYPE_ANALOG_TAPE: 'Analog Tape',
    KSNODETYPE_PHONOGRAPH: 'Phonograph',
    KSNODETYPE_VCR_AUDIO: 'VCR Audio',
    KSNODETYPE_VIDEO_DISC_AUDIO: 'Video Disc Audio',
    KSNODETYPE_DVD_AUDIO: 'DVD Audio',
    KSNODETYPE_TV_TUNER_AUDIO: 'TV Tuner Audio',
    KSNODETYPE_SATELLITE_RECEIVER_AUDIO: 'Satellite Receiver Audio',
    KSNODETYPE_CABLE_TUNER_AUDIO: 'Cable Tuner Audio',
    KSNODETYPE_DSS_AUDIO: 'DSS Audio',
    KSNODETYPE_RADIO_RECEIVER: 'Radio Receiver',
    KSNODETYPE_RADIO_TRANSMITTER: 'Radio Transmitter',
    KSNODETYPE_MULTITRACK_RECORDER: 'Multitrack Recorder',
    KSNODETYPE_SYNTHESIZER: 'Synthesizer',
    KSNODETYPE_HDMI_INTERFACE: 'HDMI Interface',
    KSNODETYPE_DISPLAYPORT_INTERFACE: 'Displayport Interface',
    KSNODETYPE_AUDIO_LOOPBACK: 'Audio Loopback',
    KSNODETYPE_AUDIO_KEYWORDDETECTOR: 'Audio Keyword Detector',
    KSNODETYPE_MIDI_JACK: 'MIDI Jack',
    KSNODETYPE_MIDI_ELEMENT: 'MIDI Element',
    KSNODETYPE_AUDIO_ENGINE: 'Audio Engine',
    KSNODETYPE_SPEAKERS_STATIC_JACK: 'Speakers Static Jack',
    KSNODETYPE_DAC: 'Digital Analog Converter',
    KSNODETYPE_ADC: 'Analog Digital Converter',
    KSNODETYPE_SRC: 'SRC',
    KSNODETYPE_SUPERMIX: 'Supermix',
    KSNODETYPE_MUX: 'Mux',
    KSNODETYPE_DEMUX: 'Demux',
    KSNODETYPE_SUM: 'Sum',
    KSNODETYPE_MUTE: 'Mute',
    KSNODETYPE_VOLUME: 'Volume',
    KSNODETYPE_TONE: 'Tone',
    KSNODETYPE_EQUALIZER: 'Equalizer',
    KSNODETYPE_AGC: 'Auto Gain Control',
    KSNODETYPE_NOISE_SUPPRESS: 'Noise Suppress',
    KSNODETYPE_DELAY: 'Delay',
    KSNODETYPE_LOUDNESS: 'Loudness',
    KSNODETYPE_PROLOGIC_DECODER: 'Prologic Decoder',
    KSNODETYPE_STEREO_WIDE: 'Stereo Wide',
    KSNODETYPE_REVERB: 'Reverb',
    KSNODETYPE_CHORUS: 'Chorus',
    KSNODETYPE_3D_EFFECTS: '3D Effects',
    KSNODETYPE_PARAMETRIC_EQUALIZER: 'Parametric Equalizer',
    KSNODETYPE_UPDOWN_MIX: 'Updown Mix',
    KSNODETYPE_DYN_RANGE_COMPRESSOR: 'Dynamic Range Compressor'
}


SPEAKER_FRONT_LEFT = 0x1
SPEAKER_FRONT_RIGHT = 0x2
SPEAKER_FRONT_CENTER = 0x4
SPEAKER_LOW_FREQUENCY = 0x8
SPEAKER_BACK_LEFT = 0x10
SPEAKER_BACK_RIGHT = 0x20
SPEAKER_FRONT_LEFT_OF_CENTER = 0x40
SPEAKER_FRONT_RIGHT_OF_CENTER = 0x80
SPEAKER_BACK_CENTER = 0x100
SPEAKER_SIDE_LEFT = 0x200
SPEAKER_SIDE_RIGHT = 0x400
SPEAKER_TOP_CENTER = 0x800
SPEAKER_TOP_FRONT_LEFT = 0x1000
SPEAKER_TOP_FRONT_CENTER = 0x2000
SPEAKER_TOP_FRONT_RIGHT = 0x4000
SPEAKER_TOP_BACK_LEFT = 0x8000
SPEAKER_TOP_BACK_CENTER = 0x10000
SPEAKER_TOP_BACK_RIGHT = 0x20000
# Bit mask locations reserved for future use
SPEAKER_RESERVED = 0x7FFC0000
# Used to specify that any possible permutation of speaker configurations
SPEAKER_ALL = 0x80000000
# DirectSound Speaker Config
KSAUDIO_SPEAKER_DIRECTOUT = 0
KSAUDIO_SPEAKER_MONO = SPEAKER_FRONT_CENTER
KSAUDIO_SPEAKER_1POINT1 = (
    SPEAKER_FRONT_CENTER |
    SPEAKER_LOW_FREQUENCY
)
KSAUDIO_SPEAKER_STEREO = (
    SPEAKER_FRONT_LEFT |
    SPEAKER_FRONT_RIGHT
)
KSAUDIO_SPEAKER_2POINT1 = (
    SPEAKER_FRONT_LEFT |
    SPEAKER_FRONT_RIGHT |
    SPEAKER_LOW_FREQUENCY
)
KSAUDIO_SPEAKER_3POINT0 = (
    SPEAKER_FRONT_LEFT |
    SPEAKER_FRONT_RIGHT |
    SPEAKER_FRONT_CENTER
)
KSAUDIO_SPEAKER_3POINT1 = (
    SPEAKER_FRONT_LEFT |
    SPEAKER_FRONT_RIGHT |
    SPEAKER_FRONT_CENTER |
    SPEAKER_LOW_FREQUENCY
)
KSAUDIO_SPEAKER_QUAD = (
    SPEAKER_FRONT_LEFT |
    SPEAKER_FRONT_RIGHT |
    SPEAKER_BACK_LEFT |
    SPEAKER_BACK_RIGHT
)

KSAUDIO_SPEAKER_SURROUND = (
    SPEAKER_FRONT_LEFT |
    SPEAKER_FRONT_RIGHT |
    SPEAKER_FRONT_CENTER |
    SPEAKER_BACK_CENTER
)
KSAUDIO_SPEAKER_5POINT0 = (
    SPEAKER_FRONT_LEFT |
    SPEAKER_FRONT_RIGHT |
    SPEAKER_FRONT_CENTER |
    SPEAKER_SIDE_LEFT |
    SPEAKER_SIDE_RIGHT
)
KSAUDIO_SPEAKER_5POINT1 = (
    SPEAKER_FRONT_LEFT |
    SPEAKER_FRONT_RIGHT |
    SPEAKER_FRONT_CENTER |
    SPEAKER_LOW_FREQUENCY |
    SPEAKER_BACK_LEFT |
    SPEAKER_BACK_RIGHT
)
KSAUDIO_SPEAKER_7POINT0 = (
    SPEAKER_FRONT_LEFT |
    SPEAKER_FRONT_RIGHT |
    SPEAKER_FRONT_CENTER |
    SPEAKER_BACK_LEFT |
    SPEAKER_BACK_RIGHT |
    SPEAKER_SIDE_LEFT |
    SPEAKER_SIDE_RIGHT
)

KSAUDIO_SPEAKER_7POINT1 = (
    SPEAKER_FRONT_LEFT |
    SPEAKER_FRONT_RIGHT |
    SPEAKER_FRONT_CENTER |
    SPEAKER_LOW_FREQUENCY |
    SPEAKER_BACK_LEFT |
    SPEAKER_BACK_RIGHT |
    SPEAKER_FRONT_LEFT_OF_CENTER |
    SPEAKER_FRONT_RIGHT_OF_CENTER
)
KSAUDIO_SPEAKER_5POINT1_SURROUND = (
    SPEAKER_FRONT_LEFT |
    SPEAKER_FRONT_RIGHT |
    SPEAKER_FRONT_CENTER |
    SPEAKER_LOW_FREQUENCY |
    SPEAKER_SIDE_LEFT |
    SPEAKER_SIDE_RIGHT
)
KSAUDIO_SPEAKER_7POINT1_SURROUND = (
    SPEAKER_FRONT_LEFT |
    SPEAKER_FRONT_RIGHT |
    SPEAKER_FRONT_CENTER |
    SPEAKER_LOW_FREQUENCY |
    SPEAKER_BACK_LEFT |
    SPEAKER_BACK_RIGHT |
    SPEAKER_SIDE_LEFT |
    SPEAKER_SIDE_RIGHT
)
# The following are obsolete 5.1 and 7.1 settings (they lack side speakers).
# Note this means
# that the default 5.1 and 7.1 settings (KSAUDIO_SPEAKER_5POINT1 and
# KSAUDIO_SPEAKER_7POINT1 are
# similarly obsolete but are unchanged for compatibility reasons).
KSAUDIO_SPEAKER_5POINT1_BACK = KSAUDIO_SPEAKER_5POINT1
KSAUDIO_SPEAKER_7POINT1_WIDE = KSAUDIO_SPEAKER_7POINT1
# DVD Speaker Positions
KSAUDIO_SPEAKER_GROUND_FRONT_LEFT = SPEAKER_FRONT_LEFT
KSAUDIO_SPEAKER_GROUND_FRONT_CENTER = SPEAKER_FRONT_CENTER
KSAUDIO_SPEAKER_GROUND_FRONT_RIGHT = SPEAKER_FRONT_RIGHT
KSAUDIO_SPEAKER_GROUND_REAR_LEFT = SPEAKER_BACK_LEFT
KSAUDIO_SPEAKER_GROUND_REAR_RIGHT = SPEAKER_BACK_RIGHT
KSAUDIO_SPEAKER_TOP_MIDDLE = SPEAKER_TOP_CENTER
KSAUDIO_SPEAKER_SUPER_WOOFER = SPEAKER_LOW_FREQUENCY


class AudioSpeakers(object):
    _methods_ = ()

    def __init__(self, value):
        if value is None:
            value = 0

        self.front_left = value | SPEAKER_FRONT_LEFT == value
        self.front_left_of_center = value | SPEAKER_FRONT_LEFT_OF_CENTER == value
        self.front_center = value | SPEAKER_FRONT_CENTER == value
        self.front_right_of_center = value | SPEAKER_FRONT_RIGHT_OF_CENTER == value
        self.front_right = value | SPEAKER_FRONT_RIGHT == value
        self.side_left = value | SPEAKER_SIDE_LEFT == value
        self.side_right = value | SPEAKER_SIDE_RIGHT == value
        self.back_left = value | SPEAKER_BACK_LEFT == value
        self.back_center = value | SPEAKER_BACK_CENTER == value
        self.back_right = value | SPEAKER_BACK_RIGHT == value
        self.high_center = value | SPEAKER_TOP_CENTER == value
        self.high_front_left = value | SPEAKER_TOP_FRONT_LEFT == value
        self.high_front_center = value | SPEAKER_TOP_FRONT_CENTER == value
        self.high_front_right = value | SPEAKER_TOP_FRONT_RIGHT == value
        self.high_back_left = value | SPEAKER_TOP_BACK_LEFT == value
        self.high_back_center = value | SPEAKER_TOP_BACK_CENTER == value
        self.high_back_right = value | SPEAKER_TOP_BACK_RIGHT == value
        self.subwoofer = value | SPEAKER_LOW_FREQUENCY == value
        
    def __int__(self):
        value = 0
        
        if self.front_left:
            value |= SPEAKER_FRONT_LEFT
        if self.front_left_of_center:
            value |= SPEAKER_FRONT_LEFT_OF_CENTER
        if self.front_center:
            value |= SPEAKER_FRONT_CENTER
        if self.front_right_of_center:
            value |= SPEAKER_FRONT_RIGHT_OF_CENTER
        if self.front_right:
            value |= SPEAKER_FRONT_RIGHT
        if self.side_left:
            value |= SPEAKER_SIDE_LEFT
        if self.side_right:
            value |= SPEAKER_SIDE_RIGHT
        if self.back_left:
            value |= SPEAKER_BACK_LEFT
        if self.back_center:
            value |= SPEAKER_BACK_CENTER
        if self.back_right:
            value |= SPEAKER_BACK_RIGHT
        if self.high_center:
            value |= SPEAKER_TOP_CENTER
        if self.high_front_left:
            value |= SPEAKER_TOP_FRONT_LEFT
        if self.high_front_center:
            value |= SPEAKER_TOP_FRONT_CENTER
        if self.high_front_right:
            value |= SPEAKER_TOP_FRONT_RIGHT
        if self.high_back_left:
            value |= SPEAKER_TOP_BACK_LEFT
        if self.high_back_center:
            value |= SPEAKER_TOP_BACK_CENTER
        if self.high_back_right:
            value |= SPEAKER_TOP_BACK_RIGHT
        if self.subwoofer:
            value |= SPEAKER_LOW_FREQUENCY

        return value

    def __str__(self):
        eye_level = sum([
            self.front_left,
            self.front_left_of_center,
            self.front_center,
            self.front_right_of_center,
            self.front_right,
            self.side_left,
            self.side_right,
            self.back_left,
            self.back_center,
            self.back_right
        ])

        three_d = sum([
            self.high_center,
            self.high_front_left,
            self.high_front_center,
            self.high_front_right,
            self.high_back_left,
            self.high_back_center,
            self.high_back_right
        ])

        sw = int(self.subwoofer)
        if three_d:
            return '{0}.{1}.{2}'.format(eye_level, sw, three_d)
        if eye_level:
            return '{0}.{1}'.format(eye_level, sw)
        if sw:
            return '{0}.{1}'.format(eye_level, sw)
        return '0'


JACKDESC2_PRESENCE_DETECT_CAPABILITY = 0x00000001
JACKDESC2_DYNAMIC_FORMAT_CHANGE_CAPABILITY = 0x00000002

MAX_SINK_DESCRIPTION_NAME_LENGTH = 32


class EPcxConnectionType(ENUM):
    eConnTypeUnknown = ENUM_VALUE(0, 'Unknown')
    eConnType3Point5mm = ENUM_VALUE(1, '1/8"')
    eConnTypeQuarter = ENUM_VALUE(2, '1/4"')
    eConnTypeAtapiInternal = ENUM_VALUE(3, 'ATAPI Internal')
    eConnTypeRCA = ENUM_VALUE(4, 'RCA')
    eConnTypeOptical = ENUM_VALUE(5, 'Optical')
    eConnTypeOtherDigital = ENUM_VALUE(6, 'Other Digital')
    eConnTypeOtherAnalog = ENUM_VALUE(7, 'Other Analog')
    eConnTypeMultichannelAnalogDIN = ENUM_VALUE(8, 'Multichannel Analog DIN')
    eConnTypeXlrProfessional = ENUM_VALUE(9, 'XLR')
    eConnTypeRJ11Modem = ENUM_VALUE(10, 'RJ11')
    eConnTypeCombination = ENUM_VALUE(11, 'Combination')


PEPcxConnectionType = POINTER(EPcxConnectionType)


class EPcxGeoLocation(ENUM):
    eGeoLocRear = ENUM_VALUE(1, 'Rear-mounted panel')
    eGeoLocFront = ENUM_VALUE(2, 'Front-mounted panel')
    eGeoLocLeft = ENUM_VALUE(3, 'Left-mounted panel')
    eGeoLocRight = ENUM_VALUE(4, 'Right-mounted panel')
    eGeoLocTop = ENUM_VALUE(5, 'Top-mounted panel')
    eGeoLocBottom = ENUM_VALUE(6, 'Bottom-mounted panel')
    eGeoLocRearPanel = ENUM_VALUE(7, 'Rear-mounted panel')
    eGeoLocRearOPanel = ENUM_VALUE(7, 'Rear-mounted slide open or pull open panel')
    eGeoLocRiser = ENUM_VALUE(8, 'Riser card')
    eGeoLocInsideMobileLid = ENUM_VALUE(9, 'Inside Mobile Lid')
    eGeoLocDrivebay = ENUM_VALUE(10, 'Drive Bay')
    eGeoLocHDMI = ENUM_VALUE(11, 'HDMI')
    eGeoLocOutsideMobileLid = ENUM_VALUE(12, 'Outside Mobile Lid')
    eGeoLocATAPI = ENUM_VALUE(13, 'ATAPI')
    eGeoLocNotApplicable = ENUM_VALUE(14, '')
    eGeoLocReserved6 = ENUM_VALUE(15, 'Reserved')


PEPcxGeoLocation = POINTER(EPcxGeoLocation)


class EPcxGenLocation(ENUM):
    eGenLocPrimaryBox = ENUM_VALUE(0, 'On primary chassis')
    eGenLocInternal = ENUM_VALUE(1, 'Inside primary chassis')
    eGenLocSeparate = ENUM_VALUE(2, 'On separate chassis')
    eGenLocOther = ENUM_VALUE(3, 'Other location')


PEPcxGenLocation = POINTER(EPcxGenLocation)


class EPxcPortConnection(ENUM):
    ePortConnJack = ENUM_VALUE(0, 'Jack')
    ePortConnIntegratedDevice = ENUM_VALUE(1, 'Slot for an integrated device')
    ePortConnBothIntegratedAndJack = ENUM_VALUE(2, 'Jack and a slot for an integrated device')
    ePortConnUnknown = ENUM_VALUE(3, 'Unknown')


PEPxcPortConnection = POINTER(EPxcPortConnection)


class KSJACK_SINK_CONNECTIONTYPE(ENUM):
    KSJACK_SINK_CONNECTIONTYPE_HDMI = ENUM_VALUE(0, 'HDMI')
    KSJACK_SINK_CONNECTIONTYPE_DISPLAYPORT = 1


PKSJACK_SINK_CONNECTIONTYPE = POINTER(KSJACK_SINK_CONNECTIONTYPE)


class JackDescription(object):

    def __init__(self, jd1, jd2):
        self.__jd1 = jd1
        self.__jd2 = jd2

    @property
    def presence_detection(self):
        if self.__jd2 is None:
            return False

        return self.__jd2.presence_detection

    @property
    def dynamic_format_change(self):
        if self.__jd2 is None:
            return False

        return self.__jd2.dynamic_format_change

    @property
    def channel_mapping(self):
        return self.__jd1.channel_mapping

    @property
    def color(self):
        return self.__jd1.color

    @property
    def connection_type(self):
        return self.__jd1.connection_type

    @property
    def geo_location(self):
        return self.__jd1.geo_location

    @property
    def gen_location(self):
        return self.__jd1.gen_location

    @property
    def port_connection(self):
        return self.__jd1.port_connection

    @property
    def is_connected(self):
        return self.__jd1.is_connected

    @property
    def location(self):
        return self.__jd1.location


class KSJACK_DESCRIPTION(ctypes.Structure):
    _fields_ = [
        ('ChannelMapping', DWORD),
        ('Color', COLORREF),
        ('ConnectionType', EPcxConnectionType),
        ('GeoLocation', EPcxGeoLocation),
        ('GenLocation', EPcxGenLocation),
        ('PortConnection', EPxcPortConnection),
        ('IsConnected', BOOL)
    ]

    @property
    def channel_mapping(self):
        return AudioSpeakers(self.ChannelMapping)

    @property
    def color(self):
        return utils.convert_triplet_to_rgb(self.Color)

    @property
    def connection_type(self):
        return EPcxConnectionType.get(self.ConnectionType.value)

    @property
    def geo_location(self):
        return EPcxGeoLocation.get(self.GeoLocation.value)

    @property
    def gen_location(self):
        return EPcxGenLocation.get(self.GenLocation.value)

    @property
    def port_connection(self):
        return EPxcPortConnection.get(self.PortConnection.value)

    @property
    def is_connected(self):
        return bool(self.IsConnected)

    @property
    def location(self):
        if str(self.geo_location):
            return '{0}, {1}'.format(self.gen_location, self.geo_location)

        return self.gen_location


PKSJACK_DESCRIPTION = POINTER(KSJACK_DESCRIPTION)


class LUID(ctypes.Structure):
    _fields_ = [
        ('LowPart', DWORD),
        ('HighPart', LONG)
    ]

    @property
    def value(self):
        return self.HighPart << 8 | self.LowPart


PLUID = POINTER(LUID)


class tagKSJACK_SINK_INFORMATION(ctypes.Structure):
    _fields_ = [
        ('ConnType', KSJACK_SINK_CONNECTIONTYPE),
        ('ManufacturerId', WORD),
        ('ProductId', WORD),
        ('AudioLatency', WORD),
        ('HDCPCapable', BOOL),
        ('AICapable', BOOL),
        ('SinkDescriptionLength', UCHAR),
        ('SinkDescription', (WCHAR * MAX_SINK_DESCRIPTION_NAME_LENGTH)),
        ('PortId', LUID),
    ]

    @property
    def manufacturer_id(self):
        return self.ManufacturerId

    @property
    def product_id(self):
        return self.ProductId

    @property
    def audio_latency(self):
        return self.AudioLatency

    @property
    def hdcp_capable(self):
        return bool(self.HDCPCapable)

    @property
    def ai_capable(self):
        return bool(self.AICapable)

    @property
    def description(self):
        return utils.convert_to_string(self.SinkDescription)

    @property
    def port_id(self):
        return self.PortId.value

    @property
    def connection_type(self):
        return KSJACK_SINK_CONNECTIONTYPE.get(self.ConnType.value)


KSJACK_SINK_INFORMATION = tagKSJACK_SINK_INFORMATION
PKSJACK_SINK_INFORMATION = POINTER(KSJACK_SINK_INFORMATION)


class tagKSJACK_DESCRIPTION2(ctypes.Structure):
    _fields_ = [
        ('DeviceStateInfo', DWORD),
        ('JackCapabilities', DWORD)
    ]

    @property
    def presence_detection(self):
        return bool(self.JackCapabilities & JACKDESC2_PRESENCE_DETECT_CAPABILITY)

    @property
    def dynamic_format_change(self):
        return bool(self.JackCapabilities & JACKDESC2_DYNAMIC_FORMAT_CHANGE_CAPABILITY)


KSJACK_DESCRIPTION2 = tagKSJACK_DESCRIPTION2
PKSJACK_DESCRIPTION2 = POINTER(KSJACK_DESCRIPTION2)


from .ks import KSPROPERTY  # NOQA


class KSNODEPROPERTY(ctypes.Structure):
    _fields_ = [
        ('Property', KSPROPERTY),
        ('NodeId', ULONG),
        ('Reserved', ULONG)
    ]


PKSNODEPROPERTY = POINTER(KSNODEPROPERTY)


class KSNODEPROPERTY_AUDIO_CHANNEL(ctypes.Structure):
    _fields_ = [
        ('NodeProperty', KSNODEPROPERTY),
        ('Channel', LONG),
        ('Reserved', ULONG)
    ]


PKSNODEPROPERTY_AUDIO_CHANNEL = POINTER(KSNODEPROPERTY_AUDIO_CHANNEL)


class KSAUDIO_CHANNEL_CONFIG(ctypes.Structure):
    _fields_ = [
        ('ActiveSpeakerPositions', LONG)
    ]


PKSAUDIO_CHANNEL_CONFIG = POINTER(KSAUDIO_CHANNEL_CONFIG)


STATIC_KSPROPSETID_Audio = (
    0x45FFAAA0,
    0x6E1B,
    0x11D0,
    0xBC,
    0xF2,
    0x44,
    0x45,
    0x53,
    0x54,
    0x00,
    0x00
)
KSPROPSETID_Audio = DEFINE_GUIDSTRUCT(
    "45FFAAA0-6E1B-11D0-BCF2-444553540000"
)
KSPROPSETID_Audio = DEFINE_GUIDNAMED(KSPROPSETID_Audio)

PARTID_MASK = 0x0000FFFF


STATIC_KSPROPSETID_Acoustic_Echo_Cancel = (
    0xD7A4AF8B,
    0x3DC1,
    0x4902,
    0x91,
    0xEA,
    0x8A,
    0x15,
    0xC9,
    0x0E,
    0x05,
    0xB2
)
KSPROPSETID_Acoustic_Echo_Cancel = DEFINE_GUIDSTRUCT(
    "D7A4AF8B-3DC1-4902-91EA-8A15C90E05B2"
)
KSPROPSETID_Acoustic_Echo_Cancel = (
    DEFINE_GUIDNAMED(KSPROPSETID_Acoustic_Echo_Cancel)
)


class KSPROPERTY_AEC(ENUM):
    KSPROPERTY_AEC_NOISE_FILL_ENABLE = 0
    KSPROPERTY_AEC_STATUS = 1
    KSPROPERTY_AEC_MODE = 2


KSPROPERTY_AEC_NOISE_FILL_ENABLE = KSPROPERTY_AEC.KSPROPERTY_AEC_NOISE_FILL_ENABLE
KSPROPERTY_AEC_STATUS = KSPROPERTY_AEC.KSPROPERTY_AEC_STATUS
KSPROPERTY_AEC_MODE = KSPROPERTY_AEC.KSPROPERTY_AEC_MODE

AEC_STATUS_FD_HISTORY_UNINITIALIZED = 0x0
AEC_STATUS_FD_HISTORY_CONTINUOUSLY_CONVERGED = 0x1
AEC_STATUS_FD_HISTORY_PREVIOUSLY_DIVERGED = 0x2
AEC_STATUS_FD_CURRENTLY_CONVERGED = 0x8

AEC_MODE_PASS_THROUGH = 0x0
AEC_MODE_HALF_DUPLEX = 0x1
AEC_MODE_FULL_DUPLEX = 0x2

STATIC_KSCATEGORY_ACOUSTIC_ECHO_CANCEL = (
    0xBF963D80,
    0xC559,
    0x11D0,
    0x8A,
    0x2B,
    0x00,
    0xA0,
    0xC9,
    0x25,
    0x5A,
    0xC1
)
KSCATEGORY_ACOUSTIC_ECHO_CANCEL = DEFINE_GUIDSTRUCT(
    "BF963D80-C559-11D0-8A2B-00A0C9255AC1"
)
KSCATEGORY_ACOUSTIC_ECHO_CANCEL = (
    DEFINE_GUIDNAMED(KSCATEGORY_ACOUSTIC_ECHO_CANCEL)
)
STATIC_KSNODETYPE_ACOUSTIC_ECHO_CANCEL = (
    STATIC_KSCATEGORY_ACOUSTIC_ECHO_CANCEL
)
KSNODETYPE_ACOUSTIC_ECHO_CANCEL = KSCATEGORY_ACOUSTIC_ECHO_CANCEL

